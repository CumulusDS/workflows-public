name: Serverless Integration
on:
  workflow_call:
    inputs:
      config:
        required: false
        type: string
        default: "serverless.yml"
      workDir:
        description: "Working directory path to run commands from.  Appends $GITHUB_WORKSPACE"
        required: false
        type: string
        default: ""
      githubEventName:
        required: false
        type: string
        default: "${{ github.event_name }}"
      githubEventAction:
        description: 'Github event action'
        required: false
        type: string
        default: "${{ github.event.action }}"
      loneRegion:
        description: "Should deployment only happen in one region?  If yes, provide that region"
        required: false
        type: string
        default: ""
      nodeVersion:
        description: "Node version to use"
        required: false
        type: string
        default: "16"
      ref:
        description: ""
        required: false
        type: string
        default: ""
      fetchDepth:
        description: "Checkout fetch-depth"
        required: false
        type: string
        default: "0"
      packageManager:
        description: "Package manager to use.  `yarn` or `yarn3`"
        required: false
        type: string
        default: "yarn3"
      role:
        description: "Role to assume for integration testing"
        required: false
        type: string
        default: "ContinuousIntegration"
      hyphen:
        description: "Is the role-name hyphenated?"
        required: false
        type: string
        default: "true"
      durationSeconds:
        description: "Duration in seconds to assume role for"
        required: false
        type: string
        default: "1200"
      npmjsToken:
        description: "NPMJS auth token"
        required: false
        type: string
        default: "NPM_TOKEN_READ_ONLY"
      awsAccessKeyId:
        description: "Key ID"
        required: false
        type: string
        default: "AWS_ACCESS_KEY_ID"
      awsSecretAccessKey:
        description: "Key secret"
        required: false
        type: string
        default: "AWS_SECRET_ACCESS_KEY"
      stackPolicyFile:
        description: "Stack policy file"
        required: false
        type: string
        default: "templates/policies/serverless.json"
      slackWebhook:
        description: "slack webhook secret"
        required: false
        type: string
        default: "SLACK_WEBHOOK"
      priorVersionToken:
        description: "prior version token"
        required: false
        type: string
        default: "PRIOR_VERSION_TOKEN"
      globalTableName:
        description: "Global table to enable PITR recovery on"
        required: false
        type: string
        default: ""
      runsOn:
        description: "Runner to use.  Default is 'ubuntu-22.04'"
        required: false
        type: string
        default: "ubuntu-22.04"
      timeoutMinutes:
        description: "Timeout in minutes"
        required: false
        type: string
        default: "20"
      serverlessArgs:
        description: "arguments to pass to serverless"
        required: false
        type: string
        default: ""
      nodeOptions:
        description: "additional node options"
        required: false
        type: string
        default: ""
jobs:
  preNotifier:
    name: Release Begin Notifier
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: Notify Slack channels production release has begun
        uses: CumulusDS/notify-release-begin-action@v1
        with:
          SLACK_WEBHOOK: ${{ secrets[inputs.slackWebhook] }}
  deploy:
    name: Deploy
    uses: CumulusDS/workflows/.github/workflows/serverless-deploy.yml@master
    secrets: inherit
    with:
      config: ${{ inputs.config }}
      workDir: ${{ inputs.workDir }}
      githubEventName: ${{ inputs.githubEventName }}
      githubEventAction: ${{ inputs.githubEventAction }}
      loneRegion: ${{ inputs.loneRegion }}
      nodeVersion: ${{ inputs.nodeVersion }}
      ref: ${{ inputs.ref }}
      fetchDepth: ${{ inputs.fetchDepth }}
      packageManager: ${{ inputs.packageManager }}
      role: ${{ inputs.role }}
      hyphen: ${{ inputs.hyphen }}
      durationSeconds: ${{ inputs.durationSeconds }}
      npmjsToken: ${{ inputs.npmjsToken }}
      awsAccessKeyId: ${{ inputs.awsAccessKeyId }}
      awsSecretAccessKey: ${{ inputs.awsSecretAccessKey }}
      stackPolicyFile: ${{ inputs.stackPolicyFile }}
      runsOn: ${{ inputs.runsOn }}
      globalTableName: ${{ inputs.globalTableName }}
      timeoutMinutes: ${{ inputs.timeoutMinutes }}
      serverlessArgs: ${{ inputs.serverlessArgs }}
      nodeOptions: ${{ inputs.nodeOptions }}
  notify:
    name: Release Notifier
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs:
      - preNotifier
      - deploy
    if: always()
    steps:
      - name: Notify Slack channels production release has completed
        uses: CumulusDS/notify-release-end-action@separate-matrix-stage-regions
        with:
          TOKEN: ${{ secrets[inputs.priorVersionToken] }}
          SLACK_WEBHOOK: ${{ secrets[inputs.slackWebhook] }}
          MATRIX_REGIONS: ${{ toJson(needs.deploy.outputs.matrixRegions) }}
          MATRIX_STAGE: ${{ toJson(needs.deploy.outputs.matrixStages) }}