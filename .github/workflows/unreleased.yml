name: Unreleased
on:
  workflow_call:
    inputs:
      runsOn:
        description: "Runner to use.  Default is 'ubuntu-22.04'"
        required: false
        type: string
        default: "ubuntu-22.04"
jobs:
  unreleased:
    name: Changes
    runs-on: ${{ inputs.runsOn }}
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Get latest release version
        id: versions
        run: |
          priorRelease=$(curl -s -H 'Authorization: token ${{ secrets.PRIOR_VERSION_TOKEN }}' -L https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
          if [[ $priorRelease -eq null ]]; then
            echo "There is no prior release!"
            echo "priorRelease=$(git rev-list --max-parents=0 HEAD)" >> $GITHUB_ENV
            echo "priorHash=$(git rev-list --max-parents=0 HEAD)" >> $GITHUB_ENV
          else
            echo "The prior release is ${priorRelease}!"
            echo "priorRelease=${priorRelease}" >> $GITHUB_ENV
            echo "priorHash=$(git rev-list -n1 ${priorRelease})" >> $GITHUB_ENV
          fi
          echo "master=$(git rev-parse master)" >> $GITHUB_ENV
      - name: Compare latest release to master
        run: |
          if [[ "${{ env.priorHash }}" == "${{ env.master }}" ]]; then
            echo "No changes exist"
            echo "changesExist=false" >> $GITHUB_ENV
          else
            echo "Changes exist!"
            echo "changesExist=true" >> $GITHUB_ENV
          fi
      - name: generate changelog
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@master
        if: env.changesExist == 'true'
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          output: unreleased.md
          sinceTag: ${{ env.priorRelease }}
          unreleasedOnly: false
          headerLabel: "# 📑 Changelog"
          breakingLabel: "### 💥 Breaking"
          enhancementLabel: "### 🚀 Enhancements"
          bugsLabel: "### 🐛 Bug fixes"
          deprecatedLabel: "### ⚠️ Deprecations"
          removedLabel: "### 🔥 Removals"
          securityLabel: "### 🛡️ Security"
          issuesLabel: "### 📁 Other issues"
          prLabel: "### 📁 Other pull requests"
          addSections: '{"documentation":{"prefix":"### 📖 Documentation","labels":["documentation"]},"prod":{"prefix":"### Production site updates","labels":["prod"]},"dev":{"prefix":"### Development site updates","labels":["dev"]},"dependabot":{"prefix":"### Dependabot updates","labels":["dependabot"]},"actions":{"prefix":"### Actions","labels":["actions"]},"dependencies":{"prefix":"### Dependency updates","labels":["dependencies"]}}'
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          author: true
          unreleased: true
          compareLink: true
          stripGeneratorNotice: true
          verbose: true
      - name: set env vars
        if: env.changesExist == 'true'
        run: |
          echo "REPO=$((echo ${{ github.repository }}) | sed 's/^..........//')" >> $GITHUB_ENV
          echo "UNRELEASED<<EOF" >> $GITHUB_ENV
          cat unreleased.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Slackify changelog to mrkdwn
        id: slackify
        uses: LoveToKnow/slackify-markdown-action@v1.0.0
        if: always() && env.changesExist == 'true'
        with:
          text: ${{ env.UNRELEASED }}
      - name: Notify
        id: notify
        uses: rtCamp/action-slack-notify@v2
        if: always() && env.changesExist == 'true'
        env:
          SLACK_CHANNEL: unreleased
          SLACK_USERNAME: "${{ env.REPO }}"
          SLACK_ICON: "https://i1.sndcdn.com/avatars-RAaOBbWj1WuxLy7y-9M7yHQ-t500x500.jpg"
          SLACK_ICON_EMOJI: ":exclamation:"
          SLACK_COLOR: "#2D50FF"
          MSG_MINIMAL: true
          SLACK_TITLE: "Unreleased Changes"
          SLACK_MESSAGE: |
            ${{ steps.slackify.outputs.text }}
          SLACK_FOOTER: https://github.com/${{ github.repository }}/compare/${{ env.priorRelease }}...master
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      - name: Notify (no changes)
        uses: rtCamp/action-slack-notify@v2
        if: always() && env.changesExist == 'false'
        env:
          SLACK_CHANNEL: unreleased
          SLACK_USERNAME: "${{ env.REPO }}"
          SLACK_ICON: "https://thumbs.dreamstime.com/z/robot-beach-chair-sitting-holding-cocktail-drink-straw-against-white-background-39981507.jpg"
          SLACK_ICON_EMOJI: ":beach_with_umbrella:"
          SLACK_COLOR: "#2EB886"
          MSG_MINIMAL: true
          SLACK_TITLE: "No Unreleased Changes"
          SLACK_MESSAGE: |
            Latest Release ${{ env.priorRelease }} and master are equal!
          SLACK_FOOTER: https://github.com/${{ github.repository }}/compare/${{ env.priorRelease }}...master
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
