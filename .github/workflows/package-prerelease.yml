name: Package Publish
on:
  workflow_call:
    inputs:
      runsOn:
        description: "Runner to use.  Default is 'ubuntu-22.04'"
        required: false
        type: string
        default: "ubuntu-22.04"
      githubEventName:
        required: false
        type: string
        default: ${{ github.event_name }}
      fetchDepth:
        description: "Checkout fetch depth"
        required: false
        type: string
        default: "0"
      packageManager:
        description: "Package manager to use.  yarn3 vs yarn"
        required: false
        type: string
        default: "yarn3"
      npmjsToken:
        description: "NPMJS auth token"
        required: false
        type: string
        default: "NPM_TOKEN_READ_ONLY"
      npmjsPublishToken:
        description: "NPMJS token with publishing permissions"
        required: false
        type: string
        default: "NPM_TOKEN_PUBLISH"
      nodeVersion:
        description: "Version of Node to use"
        required: false
        type: string
        default: "16"
      workspaces:
        description: "are workspaces enabled?  should this run for all workspaces?"
        required: false
        type: string
        default: "false"
      workspace:
        description: "specific workspoace to run against"
        required: false
        type: string
        default: ""
jobs:
  prerelease:
    name: Publish Prerelease
    runs-on: ${{ inputs.runsOn }}
    timeout-minutes: 10
    steps:
      - name: Setup
        uses: CumulusDS/workflow-setup-action@v2
        with:
          nodeVersion: ${{ inputs.nodeVersion }}
          npmToken: ${{ secrets[inputs.npmjsToken] }}
          fetch-depth: ${{ inputs.fetchDepth }}
          packageManager: ${{ inputs.packageManager }}
      - name: Set feature stage
        id: feature
        uses: CumulusDS/feature-stage-action@v2
        with:
          githubEventName: ${{ inputs.githubEventName }}
      - name: set node publish token
        uses: CumulusDS/workflows/.github/actions/set-publish-token@master
        with:
          packageManager: ${{ inputs.packageManager }}
          npmjsPublishToken: ${{ secrets[inputs.npmjsPublishToken] }}
      # set prerelease version
      - name: Set prerelease version (packages/hybrid)
        if: inputs.workspaces != 'true' && inputs.workspace == ''
        run: yarn run prerelease ${{ steps.feature.outputs.stage }}
      - name: Set prerelease version (all workspaces)
        if: inputs.workspaces == 'true' && inputs.workspace == ''
        run: yarn workspaces foreach --no-private run prerelease ${{ steps.feature.outputs.stage }}
      - name: Set prerelease version ${{ inputs.workspace }}
        if: inputs.workspaces != 'true' && inputs.workspace != ''
        run: yarn workspaces foreach --include ${{ inputs.workspace }} run prerelease ${{ steps.feature.outputs.stage }}
      # publish
      - name: Publish (packages/hybrid)
        if: inputs.workspaces != 'true' && inputs.workspace == ''
        run: yarn npm publish --tag ${{ steps.feature.outputs.stage }}
      - name: Publish (all workspaces)
        if: inputs.workspaces == 'true' && inputs.workspace == ''
        run: yarn workspaces foreach --no-private npm publish --tag ${{ steps.feature.outputs.stage }}
      - name: Publish ${{ inputs.workspace }}
        if: inputs.workspaces != 'true' && inputs.workspace != ''
        run: yarn workspaces foreach --include ${{ inputs.workspace }} run publish --tag ${{ steps.feature.outputs.stage }}
      # $GITHUB_STEP_SUMMARY
      - name: Summary (packages/hybrid)
        if: inputs.workspaces != 'true' && inputs.workspace == ''
        run: echo "### Published $(jq '.name' package.json) version $(jq .version package.json) to NPM" >> "$GITHUB_STEP_SUMMARY"
      - name: Summary (all workspaces)
        if: inputs.workspaces == 'true' && inputs.workspace == ''
        run: |
          pjs=($(find . -type f -name package.json -not -path "./node_modules/*"))
          echo "package.json files found: ${pjs[@]}"
          for version in "${pjs[@]}"; do
            if [[ "$(jq -r '.private' ${version})" != "true" ]]; then
              echo "### Published $(jq '.name' ${version}) version $(jq '.version' ${version}) to NPM" >> "$GITHUB_STEP_SUMMARY"
            fi
          done
      - name: Summary ${{ inputs.workspace }}
        if: inputs.workspaces != 'true' && inputs.workspace != ''
        run: |
          pjs=($(find . -type f -name package.json -not -path "./node_modules/*"))
          echo "package.json files found: ${pjs[@]}"
          
          for version in "${pjs[@]}"; do
            if [[ "$(jq -r '.name' ${version})" == "${{ inputs.workspace }}" ]]; then 
              echo "### Published $(jq '.name' ${version}) version $(jq '.version' ${version}) to NPM" >> "$GITHUB_STEP_SUMMARY"
            fi
          done
